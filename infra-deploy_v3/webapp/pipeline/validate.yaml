parameters:
  - name: source_location
  - name: variables_file_path
  - name: environment_name
  - name: service_principle_name
  - name: backend_storage_resourceGroupName
  - name: backend_storage_account_name
  - name: backend_storage_container_name
  - name: backend_storage_state_file_name

jobs:
  - job: Validate
    steps:
      #- task: TerraformInstaller@0
        #displayName: Install '0.14.9'
        #inputs:
          #terraformVersion: '0.14.9'
      
      - task: TerraformTaskV1@0
        displayName:  terraform init
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)${{ parameters.source_location }}'
          backendServiceArm: ${{ parameters.service_principle_name }}
          backendAzureRmResourceGroupName: ${{ parameters.backend_storage_resourceGroupName }}
          backendAzureRmStorageAccountName: ${{ parameters.backend_storage_account_name }}
          backendAzureRmContainerName: ${{ parameters.backend_storage_container_name }}
          backendAzureRmKey: ${{ parameters.backend_storage_state_file_name }}
      
      - task: TerraformTaskV1@0
        displayName:  terraform plan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)${{ parameters.source_location }}'
          commandOptions: '-var-file="${{ parameters.variables_file_path }}" --out="plan.tfplan"'
          environmentServiceNameAzureRM: ${{ parameters.service_principle_name }}
      
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)${{ parameters.source_location }}'
          Contents: |
              **/*
              !.terraform/**/*
          TargetFolder: '$(Build.ArtifactStagingDirectory)/${{ parameters.environment_name }}'
      
      - task: PublishBuildArtifacts@1
        inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/${{ parameters.environment_name }}'
            ArtifactName: '${{ parameters.environment_name }}'
            publishLocation: 'Container'